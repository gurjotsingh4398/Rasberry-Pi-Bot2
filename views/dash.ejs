<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <script src="/javascripts/jquery-3.3.1.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>

  <link rel='stylesheet' href='/stylesheets/dash.css' />

</head>

<body>
  <nav>
    <div>
      <h1>Robot Controller</h1>
    </div>
    <ul>
      <li><a class="logout" href="/">Logout</a></li>
    </ul>
  </nav>

  <h1>
    Welcome
    <%= user %>!
  </h1>

  <div class="overlay"></div>

  <div id="arrow-up"><a><img src="/images/arrow-boxed-outline-filled.png" alt="arrow"></a></div>
  <div id="arrow-left"><a><img src="/images/arrow-boxed-outline-filled.png" alt="arrow"></a></div>
  <div id="arrow-right"><a><img src="/images/arrow-boxed-outline-filled.png" alt="arrow"></a></div>
  <div id="arrow-down"><a><img src="/images/arrow-boxed-outline-filled.png" alt="arrow"></a></div>

  <div>
    <h3 class="text-muted">
      <b>Actual state of the Robot:</b>
    </h3>
    <br>
    <div id="actualState">
      <h3 id="arrowState"></h3>
      <h3 id="arrowStateS">Stopped</h3>
    </div>
  </div>

  <script>
    const socket = io();
    let temp = false;
    let startDate, endDate;

    socket.on('connect', () => {
      document.getElementById('arrowState').style.display = 'none';
    });


    socket.on('actualState', (data) => {
      if (data == 'stop') {
        $("#arrowState").hide();
        $("#arrowStateS").show();
      }
      else {
        $("#arrowState")
          .html(data)
          .show()
        $("#arrowStateS").hide();

      }
    });

    $("#arrow-up")
      .mousedown(() => {
        if (temp == false) {
          temp = true;
          startDate = new Date();
          socket.emit('arrow', 'up');
        }
      })
      .mouseup(() => {
        if (temp == true) {
          temp = false
          endDate = new Date();
          let seconds = (endDate.getTime() - startDate.getTime()) / 1000;
          console.log('up :', seconds);
          socket.emit('arrow', {
            time: seconds,
            direction: 'up',
            state: 'stop'
          });
        }
      });


    $("#arrow-down")
      .mousedown(() => {
        if (temp == false) {
          temp = true;
          startDate = new Date();
          socket.emit('arrow', 'down');
        }
      })
      .mouseup(() => {
        if (temp == true) {
          temp = false
          endDate = new Date();
          let seconds = (endDate.getTime() - startDate.getTime()) / 1000;
          console.log('down :', seconds);
          socket.emit('arrow', {
            time: seconds,
            direction: 'down',
            state: 'stop'
          });
        }
      });

    $("#arrow-left")
      .mousedown(() => {
        if (temp == false) {
          temp = true;
          startDate = new Date();
          socket.emit('arrow', 'left');
        }
      })
      .mouseup(() => {
        if (temp == true) {
          temp = false
          endDate = new Date();
          let seconds = (endDate.getTime() - startDate.getTime()) / 1000;
          console.log('left :', seconds);
          socket.emit('arrow', {
            time: seconds,
            direction: 'left',
            state: 'stop'
          });
        }
      });

    $("#arrow-right")
      .mousedown(() => {
        if (temp == false) {
          temp = true;
          startDate = new Date();
          socket.emit('arrow', 'right');
        }
      })
      .mouseup(() => {
        if (temp == true) {
          temp = false
          endDate = new Date();
          let seconds = (endDate.getTime() - startDate.getTime()) / 1000;
          console.log('right :', seconds);
          socket.emit('arrow', {
            time: seconds,
            direction: 'right',
            state: 'stop'
          });
        }
      });

  </script>
</body>

</html>